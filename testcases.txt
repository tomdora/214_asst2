trf40 : tfp15

Testcase #1:
	./detector stuff
	
	Directory "stuff" has inside of it two more folders and a single text file. The thread recursively opens the two subdirectories in new threads, and the file is opened in a new thread that tokenizes the file.
	
Testcase #2:
	./detector stuff
	
	This time, the program opens up subdirectories recursively until it gets to subdirectory "stuff/all/the/stuff" and opens up a file within the subdirectory there.
	
Testcase #3: 
	./detector stuff/example
	
	Within this directory is "b.txt" and "c.txt"
	b.txt contains "hello there hello there" and c.txt contains "hello hello out there"
	The JSD for these two files results to 0.046852, which is the same once rounded as the value shown in the assignment 2 PDF. The line is printed red.
	
Testcase #4:
	./detector stuff/all/forbidden
	
	The "forbidden" directory has no permissions whatsoever; the thread handling directories is able to gracefully exit. If instead "stuff/all" is the input, a thread is opened up for "forbidden" but is gracefully exited, and the rest of the directory is explored through without issue.

Testcase #5:
	./detector ~/Documents
	
	The detector is allowed to go through the entire Documents folder on my local machine (1,205 valid and non-empty files), and everything within is tokenized and compared. It takes a few minutes to run, but no segfaults occur. The resulting output for the JSD values is properly sorted by shared tokens and color-coded via JSD value.
